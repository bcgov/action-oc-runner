name: OpenShift CLI (oc) Runner
description: Action for running oc commands
branding:
  icon: package
  color: blue

inputs:
  ### Required
  commands:
    description: Command to run, will be prefaced by 'oc'; e.g. whoami
    required: true
  oc_namespace:
    description: OpenShift namespace; e.g. abc123-dev
    required: true
  oc_server:
    description: OpenShift server; e.g. https://api.silver.devops.gov.bc.ca:6443
    required: true
  oc_token:
    description: OpenShift access token
    required: true

  ### Usually a bad idea / not recommended
  oc_version:
    description: Override or non-default oc version; e.g. 4.13
    default: '4.14.41'

permissions: {}

runs:
  using: composite
  steps:
    - env:
        OC: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable-${{ inputs.oc_version }}/openshift-client-linux.tar.gz
      shell: bash
      working-directory: /usr/local/bin/
      run: |
        # Install CLI tool (retry, resume)
        (wget ${{ env.OC }} -qcO - | tar -xzvf - oc)|| !!
        oc version
    
    - shell: bash
      run: |
          # OpenShift login
          oc login --server=${{ inputs.oc_server }} --token=$( curl -ksX POST \
            ${{ inputs.oc_server }}/api/v1/namespaces/${{ inputs.oc_namespace }}/serviceaccounts/pipeline/token \
            --header "Authorization: Bearer ${{ inputs.oc_token }}" \
            --header "Content-Type: application/json; charset=utf-8" \
            --data '{"spec": {"expirationSeconds": 600}}' \
            | jq -r '.status.token' \
          )
          
          # Verify namespace
          if [ "$( oc project -q )" != "${{ inputs.oc_namespace }}" ]; then
            echo "Project and token do not match!"
            exit 1
          fi

    - shell: bash
      run: |
        # Run command(s)
        oc ${{ inputs.commands }}
